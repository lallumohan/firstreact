{"version":3,"sources":["test.js","Tester.js","App.js","reportWebVitals.js","index.js"],"names":["Test","props","state","StateData","axios","get","then","res","console","log","data","States","setState","this","lastOriginUpdate","d","Date","toString","Component","Tester","a","parseInt","active","new_active","sno","new_positive","positive","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,IAHI,E,qDAOnB,WAAqB,IAAD,OAClBC,IACGC,IAAI,kDACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChB,IAAMC,EAASJ,EAAIG,KACnB,EAAKE,SAAS,CAAET,UAAWQ,S,oBAIjC,WACE,IAAMD,EAAOG,KAAKX,MAAMC,UAAUW,iBAC3BC,EAAI,IAAIC,KAAKN,GAIpB,OACE,8BAIIK,EAAEE,iB,GA7BsBC,aCAbC,E,kDACjB,aAAe,IAAD,8BACZ,gBACKjB,MAAQ,CACXC,UAAW,IAHD,E,qDAOd,WAAqB,IAAD,OAClBC,IACGC,IAAI,8CACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChB,IAAMC,EAASJ,EAAIG,KACnB,EAAKE,SAAS,CAAET,UAAWQ,S,oBAKjC,WAEI,GAAY,MADCE,KAAKX,MAAMC,UAAU,GAChB,OAAO,KACzB,IAAIiB,EAAIC,SAAUR,KAAKX,MAAMC,UAAU,GAAGmB,QAASD,SAAUR,KAAKX,MAAMC,UAAU,GAAGoB,YAErF,OACI,gCAEG,qDAAwBV,KAAKX,MAAMC,UAAU,GAAGqB,IAAhD,OACCJ,EACAC,SAAUR,KAAKX,MAAMC,UAAU,GAAGmB,QAASD,SAAUR,KAAKX,MAAMC,UAAU,GAAGoB,YAC7EF,SAAUR,KAAKX,MAAMC,UAAU,IAAIsB,cAAeJ,SAAUR,KAAKX,MAAMC,UAAU,IAAIuB,iB,GA9BjER,aCGfS,E,kDACjB,aAAc,wC,0CAGd,WACI,OACI,0CAGI,cAAC,EAAD,IACA,cAAC,EAAD,W,GAViBT,aCMlBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16a6daa7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      StateData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://api.rootnet.in/covid19-in/stats/latest\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const States = res.data;\r\n        this.setState({ StateData: States });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.StateData.lastOriginUpdate;\r\n       var d = new Date(data);\r\n    {/*\r\n\r\n      if (data == null) return null; */}\r\n    return (\r\n      <div>\r\n        \r\n  \r\n    \r\n         {d.toString()}\r\n\r\n\r\n    \r\n       \r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Tester extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        StateData: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      axios\r\n        .get(\"https://www.mohfw.gov.in/data/datanew.json\")\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          const States = res.data;\r\n          this.setState({ StateData: States });\r\n        });\r\n    }\r\n  \r\n\r\n    render() {\r\n        const data = this.state.StateData[0];\r\n        if (data == null) return null;\r\n        var a = parseInt (this.state.StateData[1].active)- parseInt (this.state.StateData[1].new_active)\r\n\r\n        return (\r\n            <div>\r\n\r\n               <span>Andaman deceased-{this.state.StateData[2].sno} </span>\r\n               {a}\r\n               {parseInt (this.state.StateData[1].active)- parseInt (this.state.StateData[1].new_active)}\r\n               {parseInt (this.state.StateData[36].new_positive)- parseInt (this.state.StateData[36].positive)}\r\n\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n//import Statedata from './Statedata'\r\nimport Test from './test'\r\n//import Moh from './teste'\r\nimport Tester from './Tester'\r\n\r\nexport default class App extends Component {\r\n    constructor(){\r\n        super()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                welcome\r\n    \r\n                <Test/>\r\n                <Tester/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}