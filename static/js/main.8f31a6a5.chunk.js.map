{"version":3,"sources":["test.js","Tester.js","vaccine.js","date.js","Keralat.js","App.js","reportWebVitals.js","index.js"],"names":["Component","Sate","Keralat","filterList","event","updatedList","state","StateData","filter","list","state_name","toLowerCase","search","target","value","setState","TestData","objarray1","axios","get","then","res","States","data","key","a","b","newE","this","KL","districts","objarray","Object","keys","forEach","keyo","push","name","details","arrayCopy","console","log","arrInStr","JSON","stringify","sort","compareByAsc","compareByDesc","AN","delta21_14","confirmed","type","placeholder","onChange","id","className","onClick","sortBy","map","filteredName","index","total","deceased","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f31a6a5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './test.css';\r\nimport moment from \"moment\";\r\nexport default class Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      StateData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://api.rootnet.in/covid19-in/stats/latest\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const States = res.data;\r\n        this.setState({ StateData: States });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.StateData.lastOriginUpdate;\r\n       var d = new Date(data);\r\n    \r\n        let now = new Date();\r\n        var forceHour;\r\n        const hour = forceHour == null ? now.getHours() : forceHour;\r\n        if (hour < 9) {\r\n          now = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\r\n        }\r\n        //var c= now.getFullYear() + \"/\"+ now.getMonth()+ \"/\"+ now.getDate()+\" 8:00\";\r\n        //var f = c.toString();\r\n        //var e = \"2021/10/22 8:00\";\r\n        \r\n      \r\n      \r\n\r\n    {/*\r\n\r\n      if (data == null) return null; */}\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"live-indicator-wrapper\">\r\n        <div className=\"pulse\">    </div> \r\n        Last updated: \r\n        {moment(now).format(' MMM Do YYYY')}\r\n        {moment(\"2021/10/23 22:00\").startOf('hour').fromNow()}\r\n        \r\n        \r\n        \r\n      \r\n\r\n        {/* {d.toString()} */}\r\n\r\n \r\n\r\n        </div>\r\n    \r\n       \r\n        \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./TESTER.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class Tester extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        StateData: [],\r\n        TestData: []\r\n\r\n      };\r\n\r\n     \r\n    }\r\n\r\n     \r\n\r\n    \r\n\r\n  \r\n    componentDidMount() {\r\n      axios\r\n        .get(\"https://www.mohfw.gov.in/data/datanew.json\")\r\n        .then((res) => {\r\n          \r\n          const States = res.data;\r\n          this.setState({ StateData: States,TestData: res.data });\r\n        });\r\n    }\r\n\r\n    compareByAsc(key) {\r\n      return function(a, b) {\r\n        if (parseInt(a[key])  < parseInt(b[key]) ) return -1;\r\n        if (parseInt(a[key]) > parseInt(b[key])) return 1;\r\n        return 0;\r\n      };\r\n    }\r\n\r\n    compareByDesc(key) {\r\n      return function(a, b) {\r\n        if (parseInt(a[key]) < parseInt(b[key])) return 1;\r\n        if (parseInt(a[key]) > parseInt(b[key])) return -1;\r\n        return 0;\r\n      };\r\n    }\r\n\r\n    sortBy(key) {\r\n      let arrayCopy = [...this.state.TestData.filter((itm, ky) => ky < 36)];\r\n      const arrInStr = JSON.stringify(arrayCopy);\r\n      arrayCopy.sort(this.compareByAsc(key));\r\n      const arrInStr1 = JSON.stringify(arrayCopy);\r\n      if (arrInStr === arrInStr1) {\r\n        arrayCopy.sort(this.compareByDesc(key));\r\n      }\r\n      this.setState({ TestData : arrayCopy });\r\n    }\r\n  \r\n    filterList = (event) => {\r\n      var updatedList = this.state.StateData;\r\n      updatedList = updatedList.filter(function(list) {\r\n        return (\r\n          list.state_name.toLowerCase().search(event.target.value.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n      this.setState({\r\n        TestData: updatedList\r\n      });\r\n      };\r\n    \r\n\r\n    render() {\r\n      \r\n        var Newdata =[]\r\n        const data = this.state.StateData[0];\r\n        if (data == null) return null;\r\n        var a = parseInt (this.state.StateData[1].active)- parseInt (this.state.StateData[1].new_active)\r\n      \r\n        \r\n        this.state.TestData.filter((itm, ky) => ky < 36).forEach(product => {\r\n            \r\n             product.QuantityOnHand = parseInt(product.new_positive) - parseInt(product.positive) ;\r\n             Newdata.push(product)\r\n         \r\n         })\r\n         console.log(Newdata)\r\n      \r\n        \r\n        return (\r\n            <div>\r\n                \r\n               <span>Andaman deceased now-{this.state.StateData[2].sno}\r\n               <input type=\"text\" placeholder=\"Filter\" onChange={this.filterList} />\r\n               {this.state.StateData[1].tester} </span>\r\n\r\n               {a}\r\n               {parseInt (this.state.StateData[1].active)- parseInt (this.state.StateData[1].new_active)}\r\n               {parseInt (this.state.StateData[34].new_positive)- parseInt (this.state.StateData[34].positive)}\r\n               \r\n\r\n               <div id=\"mytable\" className=\"table-responsive mt-4 \">\r\n            <table  className=\"table table-hover table-bordered\">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th id=\"heade\">Country</th>\r\n                  <th onClick={() => this.sortBy(\"new_positive\")}>Total cases</th>\r\n                  <th onClick={() => this.sortBy(\"QuantityOnHand\")}>New Cases</th>\r\n                \r\n      \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { Newdata.map((filteredName, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{filteredName.state_name}</td>\r\n                      <td className=\"text-end\">{filteredName.new_positive}</td>\r\n                      <td className=\"text-end\">{filteredName.QuantityOnHand}</td>\r\n                      \r\n                      \r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//import styles from './india.css'\r\nimport 'bootstrap-table/dist/bootstrap-table.min.js';\r\nimport 'bootstrap-table/dist/bootstrap-table.min.css';\r\n\r\n//import \"./vaccine.css\";\r\nexport default class Vaccine extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      StateData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports\").then((res) => {\r\n      console.log(res.data);\r\n      const States = res.data;\r\n      this.setState({ StateData: States });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var data = this.state.StateData.getBeneficiariesGroupBy;\r\n    if (data == null) return null;\r\n    \r\n\r\n     var x_sum = this.state.StateData.getBeneficiariesGroupBy.reduce((acc, curr) => acc + curr.totally_vaccinated, 0);\r\n    \r\n      \r\n\r\n     \r\n     \r\n    return (\r\n    \r\n      <div>\r\n        <div className=\"container-fluid mt-5\">\r\n\r\n        <div className=\"row mt-5 \">\r\n                    \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card  text-center\" style={{boxShadow: '#4db5ff 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 class=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400, color:'rgb(52, 224, 30)'}}>Total Vaccinations</h4>\r\n                          <h1 class=\"card-title\" style={{fontFamily:'Rubik',fontWeight:700,fontSize: \"3rem\"}}>{this.state.StateData.topBlock.vaccination.total}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n            \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#dc3545 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Dose 1</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock.vaccination.tot_dose_1}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#4cd97a 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Dose 2</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock.vaccination.tot_dose_2}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#ffc107 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Today Vaccination</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock.vaccination.today}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n    \r\n                \r\n</div>        \r\n\r\n\r\n          \r\n          <table data-toggle=\"table\" data-click-to-select=\"true\" data-pagination=\"true\" data-page-list=\"[5, 10, 15, 20]\" data-height=\"340\" data-search=\"true\" class=\"table-hover table-responsive\" >\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th data-sortable=\"true\"></th>\r\n                  <th data-sortable=\"true\">TOTAL VACCINATIONS</th>\r\n                  <th data-sortable=\"true\">PARTIALLY VACCINATED</th>\r\n                  <th data-sortable=\"true\">FULLY VACCINATED</th>\r\n                  <th data-sortable=\"true\">VACCINATION TODAY</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.state.StateData.getBeneficiariesGroupBy.map((item, key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td data-sortable=\"true\" >{item.state_name}</td>\r\n                      <td data-sortable=\"true\" data-sort-order=\"desc\" >{parseInt(item.total) }</td>\r\n                      <td data-sortable=\"true\" >{item.partial_vaccinated}</td>\r\n                      <td  data-sortable=\"true\">{item.totally_vaccinated}</td>\r\n                      <td data-sortable=\"true\" >{item.today}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          \r\n  \r\n          gggh\r\n          {x_sum}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nfunction Sate() {\r\n    function getDateAtNine(forceHour) {\r\n        let now = new Date();\r\n        const hour = forceHour == null ? now.getHours() : forceHour;\r\n        if (hour < 9) {\r\n          now = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\r\n        }\r\n        return new Intl.DateTimeFormat(undefined, {\r\n          dateStyle: 'long'\r\n        }).format(now);\r\n      }\r\n      \r\n      console.log(getDateAtNine(8)); // shows what will print at 8 am on today's date\r\n      console.log(getDateAtNine()); // shows what will print at the current hour on today's date\r\n\r\n    return (\r\n        <div>\r\n            {getDateAtNine()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sate\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./TESTER.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class Keralat extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        StateData: [],\r\n        TestData: [],\r\n        objarray1: []\r\n      \r\n\r\n      };\r\n\r\n     \r\n    }\r\n\r\n     \r\n\r\n    \r\n\r\n  \r\n    componentDidMount() {\r\n      axios\r\n        .get(\"https://data.covid19bharat.org/v4/min/data.min.json\")\r\n        .then((res) => {\r\n          \r\n          const States = res.data;\r\n          this.setState({ StateData: States,TestData: res.data });\r\n        });\r\n    }\r\n\r\n    compareByAsc(key) {\r\n      return function(a, b) {\r\n        if (a[key]  < b[key] ) return -1;\r\n        if (a[key] > b[key] ) return 1;\r\n        return 0;\r\n      };\r\n    }\r\n  \r\n    compareByDesc(key) {\r\n      return function(a, b) {\r\n        if (a[key]  < b[key] ) return 1;\r\n        if (a[key] > b[key] ) return -1;\r\n        return 0;\r\n      };\r\n    }\r\n  \r\n    sortBy(key) {\r\n      var newE = this.state.StateData?.KL?.districts\r\n        let keys= newE && Object.keys(newE)\r\n        var objarray =[];\r\n        \r\n\r\n        (newE && Object.keys(newE).forEach(keyo => objarray.push({\r\n          \r\n          name: keyo, details: newE[keyo]\r\n        \r\n        })));\r\n      /*this.setState({objarray1 : objarray})*/\r\n      objarray = [...this.state.objarray1]\r\n      let arrayCopy = [...this.state.objarray1];\r\n      console.log(arrayCopy)\r\n      const arrInStr = JSON.stringify(arrayCopy);\r\n      arrayCopy.sort(this.compareByAsc(key));\r\n      const arrInStr1 = JSON.stringify(arrayCopy);\r\n      if (arrInStr === arrInStr1) {\r\n        arrayCopy.sort(this.compareByDesc(key));\r\n      }\r\n      \r\n      this.setState({ objarray : arrayCopy });\r\n     \r\n    }\r\n      \r\n\r\n  /*  compareBy(key, ascending) {\r\n      let reverse = ascending ? 1 : -1;\r\n      return function (a, b) {\r\n        if (a[key] < b[key]) return -1 * reverse;\r\n        if (a[key] > b[key]) return 1 * reverse;\r\n        return 0;\r\n      };\r\n    }\r\n       \r\n  sortBy(key) {\r\n    var newE = this.state.StateData?.KL?.districts\r\n        let keys= newE && Object.keys(newE)\r\n        var objarray =[];\r\n        \r\n\r\n        (newE && Object.keys(newE).forEach(keyo => objarray.push({\r\n          \r\n          name: keyo, details: newE[keyo]\r\n        \r\n        })));\r\n    let arrayCopy = [...objarray];\r\n    \r\n    arrayCopy.sort(this.compareBy(key));\r\n    this.setState({objarray: arrayCopy});\r\n    console.log(objarray)\r\n     }*/\r\n  \r\n    filterList = (event) => {\r\n      var updatedList = this.state.StateData;\r\n      updatedList = updatedList.filter(function(list) {\r\n        return (\r\n          list.state_name.toLowerCase().search(event.target.value.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n      this.setState({\r\n        TestData: updatedList\r\n      });\r\n      };\r\n    \r\n\r\n    render() {\r\n        var data=this.state.StateData\r\n        var newE = this.state.StateData?.KL?.districts;\r\n        \r\n        var objarray1 =[]; \r\n        \r\n\r\n        (newE && Object.keys(newE).forEach(key => objarray1.push({\r\n          \r\n          name: key, details: newE[key]\r\n        \r\n        })));\r\n        \r\n        \r\n      \r\n        \r\n    \r\n\r\n       \r\n       \r\n       {/*  const data = this.state.StateData[0];\r\n        if (data == null) return null;\r\n        var a = parseInt (this.state.StateData[1].active)- parseInt (this.state.StateData[1].new_active)\r\n      \r\n        \r\n        this.state.TestData.filter((itm, ky) => ky < 36).forEach(product => {\r\n            \r\n             product.QuantityOnHand = parseInt(product.new_positive) - parseInt(product.positive) ;\r\n             Newdata.push(product)\r\n         \r\n         }) */}\r\n         \r\n\r\n      \r\n        \r\n        return (\r\n\r\n            \r\n            <div>\r\n                 {this.state.StateData?.AN?.delta21_14?.confirmed} \r\n               <span>Andaman deceased now\r\n               <input type=\"text\" placeholder=\"Filter\" onChange={this.filterList} />\r\n                </span>\r\n               \r\n              \r\n\r\n             \r\n\r\n               <div id=\"mytable\" className=\"table-responsive mt-4 \">\r\n            <table  className=\"table table-hover table-bordered\">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th id=\"heade\">Country</th>\r\n                  <th onClick={() => this.sortBy(\"name\")}>Total cases</th>\r\n                  <th onClick={() => this.sortBy(\"deceased\")}>New Cases</th>\r\n                \r\n      \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { objarray1.map((filteredName,index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{filteredName?.name}</td>\r\n                      <td className=\"text-end\">{filteredName?.details?.total?.confirmed}</td>\r\n                      <td className=\"text-end\">{filteredName?.details?.total?.deceased}</td>\r\n                      \r\n                      \r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n\r\n*/}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n//import Statedata from './Statedata'\r\nimport Test from './test'\r\n//import Moh from './teste'\r\nimport Tester from './Tester'\r\nimport Vaccine from './vaccine'\r\nimport Sate from './date'\r\nimport Keralat from './Keralat' \r\n\r\nexport default class App extends Component {\r\n    constructor(){\r\n        super()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                welcome\r\n                \r\n               <Keralat/>\r\n                {/*<Sate/>\r\n                <Tester/>\r\n                <Test/>\r\n                <Vaccine/>*/}\r\n            \r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}